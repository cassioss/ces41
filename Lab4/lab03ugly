/*  Programa para contar as ocorrencias das
    palavras de um texto                    */

program AnaliseDeTexto {{{

/*  Variaveis globais  */

global {
char nomes[50,10], palavra[10];
int ntab, nocorr[50];
}

/*  Funcao para procurar uma palavra na tabela de palavras  */

int function Procura ()
local {
int i, inf, sup, med, posic, compara;
logic achou, fimteste;
}
statements {
achou = false; inf = 1; sup = ntab;
while !achou && sup >= inf do {
med = (inf + sup) / 2;
compara = 0; fimteste = false;
for i init 0 while !fimteste && compara == 0 new i+1 do {
if palavra[i] < nomes[med, i] then
compara = ~1;
else if palavra[i] > nomes[med, i] then
compara = 1;
if palavra[i] == '\0' || nomes[med, i] == '\0' then
fimteste = true;
}
if compara == 0 then
achou = true;
else if compara < 0 then
sup = med - 1;
else inf = med + 1;
}
if achou then posic = med;
else posic = ~inf;
return posic;
}

/*  Procedimento para inserir uma palavra na tabela de palavras  */

procedure Inserir (int posic)
local {
	int i, j; logic fim;
}
statements {
	ntab = ntab + 1;
	for i init ntab while i >= posic+1 new i-1 do {
        	fim = false;
        	for j init 0 while !fim new j+1 do {
            	nomes[i,j] = nomes[i-1,j];
            	if nomes[i,j] == '\0' then
                	fim = true;
        	}
		nocorr[i] = nocorr[i-1];
	}
    	fim = false;
    	for j init 0 while !fim new j+1 do {
        	nomes[posic,j] = palavra[j];
        	if palavra[j] == '\0' then
            	fim = true;
    	}
	nocorr[posic] = 1;
}

/*  Procedimento para escrever a tabela de palavras  */

procedure ExibirTabela ()
local {
	int i; logic fim;
}
statements {
	write ("          ", "Palavra             ", 
								"   Num. de ocorr.");
	for i init 1 while i <= 50 new i+1 do write ("-");
	for i init 1 while i <= ntab new i+1 do {
		write ("\n          ");
		fim = false;
		for j init 0 while !fim new j+1 do {
            if nomes[i,j] == '\0' then fim = true;
            else write (nomes[i,j]);
   		}
		write (" | ", nocorr[i]);	
	}
}

/*  Modulo principal  */

main
local {
    char c; int posic; logic fim;
}
statements {
	ntab = 0;
	write ("Nova palavra? (s/n): ");
	read (c);
	while c == 's' || c == 'S' do {
        	write ("\nDigite a palavra: ");
        	fim = false;
		for i init 0 while !fim new i+1 do {
            read (palavra[i]);
            if palavra[i] == '\n' then {
                fim = true;
                palavra[i] = '\0';
            }
        	}		
		posic = Procura ();
		if posic > 0 then
			nocorr[posic] = nocorr[posic] + 1;
		else
			call Inserir (~posic);
        	write ("\n\nNova palavra? (s/n): ");
        	read (c);
	}
	call ExibirTabela ();
}
}}}
